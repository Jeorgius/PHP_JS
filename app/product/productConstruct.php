<?php
/**
 * Created by PhpStorm.
 * User: Georgy
 * Date: 17.07.2018
 * Time: 17:02
 */

namespace productSpace;
include_once ('product.php');
include_once ('productShort.php');
use \product;
use \productShort;

class productConstruct extends product
{
    public $sku;
    public $title;
    public $price;
    public $pn;
    public $picHTML;

    public $vendor;
    public $category;
    public $dateModified;
    public $popularity;

    public $heroPic;
    public $galleryPics = array();
    public $features = array();

    public function __construct($data){
        $this->createProduct($data);
    }

    public function callData($sku) {
        //parent::callData($sku); // TODO: Change the autogenerated stub
    }

    private function createShortProduct($data) {
        $root = $_SERVER['DOCUMENT_ROOT'];
        $sku = $data['sku'];
        $filename = $root.'/data/store.json';

        $storeItem = new productShort($data['sku'],$data['title'],$data['price'], $data['pn']);


        $storeItem_json = json_encode($storeItem);

        file_put_contents($root.'/product/_'.$sku.'/'.$sku.'_s.json', $storeItem_json);

        $jsonDataShort = json_decode(file_get_contents($filename));
        $jsonDataShort[] = $storeItem_json;
        file_put_contents($filename, json_encode($jsonDataShort));
    }
    private function saveProduct ($item) {
        $sku = $item->sku;
        $root = $_SERVER['DOCUMENT_ROOT'];
        file_put_contents($root.'/product/_'.$sku.'/'.$sku.'.json', json_encode($item));
    }


    private function createProduct ($data) {
        $root = $_SERVER['DOCUMENT_ROOT'];
        $nickname = $_SESSION['nickname'];
        $item = new product($data['sku']); // new instance of product
        $tmpDir = $root . '/tmp/' . $nickname . '/';
        $productJSON = array ();
        $featurePics = glob($tmpDir . '*'); // returns the whole pass to pictures, so basename it!

        if (isset($data['sku'])) {
            $sku = $data['sku'];
            $item->sku = $sku;
            //$sql = "UPDATE users SET name='". $user->name . "' WHERE nickname = '" . $user->nickname."';";
            if(file_exists($root . '/product/_' . $sku)===FALSE) mkdir($root . '/product/_' . $sku);
        }

        if (isset($data['title'])) {
            $productTitle = $data['title'];
            $item->title = $productTitle;
            $productJSON['title'] = $productTitle;
        }
        if(isset($data['productPN'])){
            $productPN = $data['productPN'];
            $item->pn = $productPN;
            $productJSON['productPN'] = $productPN;
        } else {
            $productPN = 0;
            $item->pn = $productPN;
            $productJSON['productPN'] = $productPN;
        }
        if(isset($data['popularity'])){
            $popularity = $data['popularity'];
            $item->popularity = $popularity;
            $productJSON['popularity'] = $popularity;
        } else {
            $popularity = 0;
            $item->popularity = $popularity;
            $productJSON['popularity'] = $popularity;
        }

        if(isset($data['category'])){
            $category = $data['category'];
            $item->category = $category;
            $productJSON['category'] = $category;
        } else {
            $category = 0;
            $item->category = $category;
            $productJSON['category'] = $category;
        }
        if(isset($data['price'])){
            $price = $data['price'];
            $item->price = $price;
            $productJSON['price'] = $price;
        } else {
            $price = 0;
            $item->price = $price;
            $productJSON['price'] = $price;
        }
        if(isset($data['vendor'])){
            $vendor = $data['vendor'];
            $item->vendor = $vendor;
            $productJSON['vendor'] = $vendor;
        } else {
            $vendor = 0;
            $item->vendor = $vendor;
            $productJSON['vendor'] = $vendor;
        }

//getting tag names

        $skuDir = $root . '/product/_' . $sku . '/';

        if(file_exists($skuDir)===FALSE) mkdir($skuDir);
        for ($i=0; $i<count($featurePics); $i++) {
            rename($tmpDir . basename($featurePics[$i]),
                $skuDir . basename($featurePics[$i]));
        }

        for ($i=0; $i<$data['fQ']; $i++) {
            if (isset($data['fTitle'. $i]) === FALSE) $data['fTitle' . $i] = 0;
            if (isset($data['fText' . $i]) === FALSE) $data['fText' . $i] = 0;
            if (glob($skuDir.'fl'.$i.'*')===FALSE or
                glob($skuDir.'fr'.$i.'*')===FALSE or
                glob($skuDir.'fm'.$i.'*')===FALSE   ) {
                $pic = 0;
            } else {
                $pic = glob($skuDir.'fl'.$i.'*') or
                $pic = glob($skuDir.'fr'.$i.'*') or
                $pic = glob($skuDir.'fm'.$i.'*');
            }

            $item->features[$i] = ['tag' => $data['tag' . $i],
                'title' => $data['fTitle' . $i],
                'text' => $data['fText' . $i],
                'image' => $pic];
            $productJSON[$i] = ['tag' => $data['tag' . $i],
                'title' => $data['fTitle' . $i],
                'text' => $data['fText' . $i],
                'image' => $pic];

        }
        $product_JSON_path[$sku] = ['path' => $skuDir . $sku . '.json',
            'popularity' => $popularity];

     /*   $commonJSON = file_get_contents($root . '/products/products.json');
        $commonJSON->$sku = new \stdClass();
        $commonJSON->$sku->title = $productTitle;
        $commonJSON->$sku->category = $category;
        $commonJSON->$sku->price = $price;*/
//$commonJSON->$sku->picHTML = $picHTML;


        $productInfo = serialize($item);
        $JSON_content = json_encode($productJSON);
        $JSON_path = json_encode($product_JSON_path);

        file_put_contents($skuDir . $sku . '.txt', $productInfo);
        //file_put_contents($skuDir . $sku . '.json', $JSON_content); //JSON-file
        //file_put_contents($root . '/product/products_node.json', $JSON_path, FILE_APPEND); //JSON-file path for calling from node

        $this->saveProduct($item);
        $this->createShortProduct($data);

        if(file_exists($tmpDir)) rmdir($tmpDir);
        $msg = 'SAVED SUCCESSFULLY';
        echo json_encode($msg);
    }


}